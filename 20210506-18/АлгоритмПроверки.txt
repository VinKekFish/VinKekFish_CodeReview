// КОПИЯ ФАЙЛА, оригинал C:\dev\VinKekFish\main_tests\Задачи и другое\Проверки\АлгоритмПроверки.txt

// Версия файла 2021.05.06

0. Копирование проверяемых проектов
0.0. Копирование
	0. Создать директорию для копирования, аналогично 20210505 (дата копирования)
+
	1. Написать сопроводительный файл "-.txt", что именно будет проверятся. Скопировать туда файлы "Проверки.txt" и "АлгоритмыПроверки.txt" и указать в них, что это - копии, и какого именно числа они скопированны
0.1. Перед копированием, убедится, что создана документация на проект
	1. Задекларированны состояния объектов. Проверить по файлу "Память.txt" пункт 3
	+
	2. Задекларирован ввод-вывод, см. файл "Конфи.txt"
	- не проверяем
0.2. Скопировать все данные в отдельную директорию "sources" (это - неизменяемые копии оригиналов).
	Скопировано

1. Проверка на правильные состояния объектов и выход за пределы массива и т.п.
1.0. Подробнее см. файл "Память.txt". Этот файл скопировать в директорию
	+ файл скопирован

1.1. Если необходимо, пометить в оригинальных исходниках следующее:
	1. Какие есть состояния объектов? Например: непроинициализирован, проинициализирован и т.п.
	2. Как эти состояния отличить друг от друга в программе?
	3. В каких состояниях какому использованию подлежит объект?
	4. Проверить, понятно ли описано, как создавать, использовать и утилизировать объект
	5. Проверить, понятно ли описаны специфические для класса правила ручной проверки (условия на верность использования)
	6. Если что-то изменено, начать с пункта 0 заново (в т.ч., можно именовать папки, 20210505-1713)

1.2. Скопировать все данные из sources в новую директорию
	1. Пометить в сопроводительном файле "-.txt", для чего создаётся новая директория (пункт 1.2 Алгоритмов проверки)
	+ скопировал и создал
1.3. Использую файл "Память.txt" продолжать работу, документируя в нём и в проверяемых исходниках (и других файлах, если нужно).

2. Конфиденциальность, ввод-вывод
	1. Документация ввода-вывода
	2. Работа с разными уровнями конфиденциальности и их ввод-вывод
	3. Для тайминг-атак: отсутствие условий, зависящих от высоких уровней конфиденциальности.


3. Проверка алгоритмов, подлежащих описанию в псевдокоде
	2.0. Снова сделать копию всех исходников, пометить назначении копии в "-.txt". Скопировать файл "Алг.txt" в корень копии.
	2.1. Проверить, что нужные алгоритмы описаны в псевдокоде. В частности, описана вся криптография
	2.2. Проверить, что алгоритмы в коде программы и в псевдокоде совпадают.
		1. Совпадают имена параметров, если это нужно (хотя бы не вводят в заблуждение случайным совпадением имён)
		2. Константы описаны в документации и поименованы также и имеют те же значения
		3. Все переменные алгоритма есть в коде
		4. Все шаги алгоритма есть в коде
		5. Алгоритм в коде делает то же, что и алгоритм в псевдокоде
